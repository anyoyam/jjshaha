var asyncFun=function(n,t){var r,o=[],t=t||window,e="throw",l=function(n,t){return Object.prototype.toString.call(n).toLowerCase().split(" ")[1].replace("]","")===(t||"function").toLowerCase()},u=function(n,t){r.retn=n},i=function(n,t){var r=o.shift()||u;return r(n,t)},f=function(n){if(l(e))return e.call(t,n);if("log"!=e)throw new Error(n);l(console,"object")&&l(console.error)?console.error(n):alert(n)};return l(n)&&o.push(n),r={retn:null,level:function(n){return e=l(n)?n:"log"==n?"log":"throw",this},then:function(n){var r=this;return l(n)&&o.push(function(o,e){t=e||t,r.retn=o||null,n.call(t,i,f,r.retn)}),r},fork:function(n){var r=this;l(n,"object")&&o.push(function(o,e){if(!l(o,"object")||void 0==o.flag)throw new Error("need flag to decide which function will be run, when start a FORK method.");if(void 0==n[o.flag]||!l(n[o.flag]))throw new Error('function "'+o.flag+'" not found.');t=e||t,r.retn=o||null,n[o.flag].call(t,i,f,r.retn)})},run:function(){var n=o.shift(),r=o.shift()||u,e=[r,f];if(arguments.length>0)for(var l=0;l<arguments.length;l++)e.push(arguments[l]);n.apply(t,e)}}};"undefined"!=typeof module&&(module.exports=asyncFun);